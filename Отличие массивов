Минусы фиксированного массива 
               1.фиксированные массивы не могут иметь длину, 
               основанную ни на входных данных пользователя, ни на каком-либо другом значении, вычисленном во время выполнения;
               2.фиксированные массивы имеют фиксированную длину, которую нельзя изменить.
Во многих случаях эти ограничения проблематичны. 
К счастью, C++ поддерживает второй тип массивов, известный как динамический массив. 
Длину динамического массива можно установить во время выполнения, и ее можно изменить. 
Однако создание динамических массивов немного сложнее, поэтому мы рассмотрим их позже в этой главе.
Массив при передаче в функцию не копируется а передаетсся исходный массив
Чтобы функция не изменяла параметры массива можно сделатть его константным  void passArray(const int prime[5])
std::size() будет работать и с другими типами объектов (такими как std::array и std::vector), и она вызовет ошибку компиляции, если вы попытаетесь использовать ее с фиксированным массивом, который был передан в функцию!
Небольшой трюк: мы можем определить длину фиксированного массива, разделив размер всего массива на размер элемента массива   std::cout << "The array has: " << sizeof(array) / sizeof(array[0]) << " elements\n";
