C++11 определяет новую концепцию, класс перечисления (enum class, также называемый перечислением с ограниченной областью видимости), 
который делает перечисления как строго типизированными??????????, так и строго ограниченными по области видимости. 
Чтобы создать класс перечисления, мы используем ключевое слово class после ключевого слова enum.
При обычных перечислениях перечислители помещаются в ту же область видимости, что и само перечисление, поэтому обычно вы можете получить доступ к перечислителям напрямую (например, red). 
Однако с классами перечисления строгие правила области видимости означают, что все перечислители считаются частью перечисления, 
поэтому для доступа к перечислителю необходимо использовать квалификатор области видимости (например, Color::red).

Выводы исходя из главы(отличия):
1.У enum class ограниченная область видимости(обычным перечислитель можно вызвать просто red, а с классами перечисления только использовать квалификатор области видимости Color::red)((Это помогает снизить загрязнения пространства имен и вероятность конфликтов))
2.Каждый класс перечисления(enum class) считается уникальным(для компилятора) и он не будет неявно сравнивать перечислители из разных перечислений.(Внутри одного класса можно)
3.Компилятор больше не будет неявно преобразовывать значения перечислителей в целые числа.(Однако можно так же static_cast)
